{"ast":null,"code":"var _jsxFileName = \"/home/ec2-user/environment/Plaza/src/Chat.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect, useRef } from 'react';\nimport io from 'socket.io-client';\nimport { ListChat } from './ListChat.js';\nimport './Chat.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io(); // Chat panel that allows users to communicate with all other users on the server\n\nexport function Chat(props) {\n  _s();\n\n  const [messageList, updateMessage] = useState([]);\n  const inputRef = useRef(null);\n  const {\n    username\n  } = props;\n\n  function sendMessage() {\n    if (inputRef !== null) {\n      const message = inputRef.current.value;\n\n      if (message !== '') {\n        socket.emit('chat_submit', {\n          username,\n          message: `${username}: ${message}`\n        });\n        inputRef.current.value = '';\n      }\n    }\n  }\n\n  function keyPress(key) {\n    if (key.charCode === 13) {\n      sendMessage();\n    }\n  }\n\n  useEffect(() => {\n    socket.on('chat_update', data => {\n      updateMessage(prevMessages => [...prevMessages, data.message]);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Chat\",\n    children: username ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messageList\",\n      children: [messageList.map((message, index) => /*#__PURE__*/_jsxDEV(ListChat, {\n        message: message\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 58\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatbox\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \" Send a message\",\n          ref: inputRef,\n          onKeyPress: key => keyPress(key),\n          tyep: \"text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: sendMessage,\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messageList\",\n      children: [messageList.map((message, index) => /*#__PURE__*/_jsxDEV(ListChat, {\n        message: message\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 58\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatbox\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \" Send a message\",\n          ref: inputRef,\n          tyep: \"text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Chat, \"vp196n0fw54eut+aIr3qGfkRQfE=\");\n\n_c = Chat;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"sources":["/home/ec2-user/environment/Plaza/src/Chat.js"],"names":["useState","useEffect","useRef","io","ListChat","socket","Chat","props","messageList","updateMessage","inputRef","username","sendMessage","message","current","value","emit","keyPress","key","charCode","on","data","prevMessages","map","index"],"mappings":"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","sourcesContent":["import { useState, useEffect, useRef } from 'react';\nimport io from 'socket.io-client';\nimport { ListChat } from './ListChat.js';\nimport './Chat.css';\n\nconst socket = io();\n// Chat panel that allows users to communicate with all other users on the server\nexport function Chat(props) {\n    const [messageList, updateMessage] = useState([]);\n    const inputRef = useRef(null);\n    const { username } = props;\n\n    function sendMessage() {\n        if (inputRef !== null) {\n            const message = inputRef.current.value;\n            if (message !== '') {\n                socket.emit('chat_submit', { username, message: `${username}: ${message}` });\n                inputRef.current.value = '';\n            }\n        }\n    }\n\n    function keyPress(key) {\n        if (key.charCode === 13) {\n            sendMessage();\n        }\n    }\n\n    useEffect(() => {\n        socket.on('chat_update', (data) => {\n            updateMessage((prevMessages) => [...prevMessages, data.message]);\n        });\n    }, []);\n\n    return (\n        <div className=\"Chat\">\n            {username ? (\n                <div className=\"messageList\">\n                    {messageList.map((message, index) => <ListChat key={index} message={message} />)}\n                    <div className=\"chatbox\">\n                        <input placeholder=\" Send a message\" ref={inputRef} onKeyPress={(key) => keyPress(key)} tyep=\"text\" />\n                        <button onClick={sendMessage}>Send</button>\n                    </div>\n                </div>\n            ) : (\n                <div className=\"messageList\">\n                    {messageList.map((message, index) => <ListChat key={index} message={message} />)}\n                    <div className=\"chatbox\">\n                        <input placeholder=\" Send a message\" ref={inputRef} tyep=\"text\" />\n                        <button>Send</button>\n                    </div>\n                </div>\n            )}\n        </div>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}