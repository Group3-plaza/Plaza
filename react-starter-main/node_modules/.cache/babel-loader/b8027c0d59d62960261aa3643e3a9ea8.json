{"ast":null,"code":"var _jsxFileName = \"/Users/coltonjohnson/Desktop/CS490/Plaza/react-starter-main/src/ColorPicker.js\",\n    _s = $RefreshSig$();\n\n// Color picker that allows the selection of a color to be used by Canvas.js\nimport './ColorPicker.css';\nimport { useState } from 'react';\nimport { ColorBox } from './ColorBox';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function ColorPicker(props) {\n  _s();\n\n  // const [color, setColor] = useState(null);\n  const [isClicked, setClicked] = useState(false);\n  const [circleClicked, setCircleClicked] = useState(null);\n  const {\n    setSelectedColor\n  } = props;\n  const colors = ['Red', 'Red-Orange', 'Orange', 'Yellow-Orange', 'Yellow', 'Yellow-Green', 'Green', 'Blue-Green', 'Blue', 'Blue-Violet', 'Violet', 'Red-Violet', 'White', 'Black']; // when a user clicks on a specific color\n\n  function onClickColor(index) {\n    // set clicked = true and set the color that is clicked to pass to colorbox.js\n    setClicked(true);\n    setCircleClicked(index); // set the color in app.js\n\n    setSelectedColor(index);\n    console.log('clicked: ', index);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"color-board\",\n    children: colors.map((item, index) => /*#__PURE__*/_jsxDEV(ColorBox, {\n      value: item,\n      onClick: () => onClickColor(index),\n      color: index,\n      clicked: isClicked,\n      which: circleClicked\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ColorPicker, \"WHZaqS77GKvDRADAz5yMSZ/iQFE=\");\n\n_c = ColorPicker;\n\nvar _c;\n\n$RefreshReg$(_c, \"ColorPicker\");","map":{"version":3,"sources":["/Users/coltonjohnson/Desktop/CS490/Plaza/react-starter-main/src/ColorPicker.js"],"names":["useState","ColorBox","ColorPicker","props","isClicked","setClicked","circleClicked","setCircleClicked","setSelectedColor","colors","onClickColor","index","console","log","map","item"],"mappings":";;;AAAA;AACA,OAAO,mBAAP;AACA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,QAAT,QAAyB,YAAzB;;AAEA,OAAO,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AAAA;;AAC/B;AACA,QAAM,CAACC,SAAD,EAAYC,UAAZ,IAA0BL,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAACM,aAAD,EAAgBC,gBAAhB,IAAoCP,QAAQ,CAAC,IAAD,CAAlD;AAEA,QAAM;AAAEQ,IAAAA;AAAF,MAAuBL,KAA7B;AAEA,QAAMM,MAAM,GAAG,CACX,KADW,EAEX,YAFW,EAGX,QAHW,EAIX,eAJW,EAKX,QALW,EAMX,cANW,EAOX,OAPW,EAQX,YARW,EASX,MATW,EAUX,aAVW,EAWX,QAXW,EAYX,YAZW,EAaX,OAbW,EAcX,OAdW,CAAf,CAP+B,CAwB/B;;AACA,WAASC,YAAT,CAAsBC,KAAtB,EAA6B;AACzB;AACAN,IAAAA,UAAU,CAAC,IAAD,CAAV;AACAE,IAAAA,gBAAgB,CAACI,KAAD,CAAhB,CAHyB,CAKzB;;AACAH,IAAAA,gBAAgB,CAACG,KAAD,CAAhB;AAEAC,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBF,KAAzB;AACH;;AAED,sBACI;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA,cACKF,MAAM,CAACK,GAAP,CAAW,CAACC,IAAD,EAAOJ,KAAP,kBACR,QAAC,QAAD;AAAU,MAAA,KAAK,EAAEI,IAAjB;AAAuB,MAAA,OAAO,EAAE,MAAML,YAAY,CAACC,KAAD,CAAlD;AAA2D,MAAA,KAAK,EAAEA,KAAlE;AAAyE,MAAA,OAAO,EAAEP,SAAlF;AAA6F,MAAA,KAAK,EAAEE;AAApG;AAAA;AAAA;AAAA;AAAA,YADH;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH;;GA3CeJ,W;;KAAAA,W","sourcesContent":["// Color picker that allows the selection of a color to be used by Canvas.js\nimport './ColorPicker.css';\nimport { useState } from 'react';\nimport { ColorBox } from './ColorBox';\n\nexport function ColorPicker(props) {\n    // const [color, setColor] = useState(null);\n    const [isClicked, setClicked] = useState(false);\n    const [circleClicked, setCircleClicked] = useState(null);\n\n    const { setSelectedColor } = props\n\n    const colors = [\n        'Red',\n        'Red-Orange',\n        'Orange',\n        'Yellow-Orange',\n        'Yellow',\n        'Yellow-Green',\n        'Green',\n        'Blue-Green',\n        'Blue',\n        'Blue-Violet',\n        'Violet',\n        'Red-Violet',\n        'White',\n        'Black',\n    ];\n\n    // when a user clicks on a specific color\n    function onClickColor(index) {\n        // set clicked = true and set the color that is clicked to pass to colorbox.js\n        setClicked(true);\n        setCircleClicked(index)\n\n        // set the color in app.js\n        setSelectedColor(index)\n\n        console.log('clicked: ', index);\n    }\n\n    return (\n        <div className=\"color-board\">\n            {colors.map((item, index) => (\n                <ColorBox value={item} onClick={() => onClickColor(index)} color={index} clicked={isClicked} which={circleClicked} />\n            ))}\n        </div>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}